https://docs.djangoproject.com/en/1.10/intro/tutorial01/

Creating a project¶

If this is your first time using Django, you’ll have to take care of some initial setup. Namely, you’ll need to auto-generate some code that establishes a Django project – a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings.

From the command line, cd into a directory where you’d like to store your code, then run the following command:

$ django-admin startproject mysite1

You’ll need to avoid naming projects after built-in Python or Django components. In particular, this means you should avoid using names like django (which will conflict with Django itself) or test (which conflicts with a built-in Python package).

Directory: C:\Python35-32\mypython\mysite1

Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----        10/20/2016  12:30 PM            mysite1
-a---        10/20/2016  12:30 PM        805 manage.py


    Directory: C:\Python35-32\mypython\mysite1\mysite1


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---        10/20/2016  12:30 PM       3099 settings.py
-a---        10/20/2016  12:30 PM        764 urls.py
-a---        10/20/2016  12:30 PM        392 wsgi.py
-a---        10/20/2016  12:30 PM          0 __init__.py

The outer mysite1/  (C:\Python35-32\mypython\mysite1 ) root directory is just a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like.
The inner mysite/ directory is the actual Python package for your project. Its name is the Python package name you’ll need to use to import anything inside it (e.g. mysite.urls).
mysite1/__init__.py: An empty file that tells Python that this directory should be considered a Python package. 
mysite1/settings.py: Settings/configuration for this Django project. Django settings will tell you all about how settings work.
mysite/urls.py: The URL declarations for this Django project; a “table of contents” of your Django-powered site
mysite/wsgi.py: An entry-point for WSGI-compatible web servers to serve your project. 

Let’s verify your Django project works. Change into the outer mysite directory, if you haven’t already, and run the following commands:

$ python manage.py runserver

PS C:\Python35-32\mypython\mysite1> python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).

You have 13 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin,
 auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
October 20, 2016 - 12:34:57
Django version 1.10.2, using settings 'mysite1.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.

PS C:\Python35-32\mypython\mysite1> python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying sessions.0001_initial... OK
PS C:\Python35-32\mypython\mysite1>

----
u can also do this:-

python manage.py runserver 8080
python manage.py runserver 0.0.0.0:8000


Project -vs- apps. 
A project can contain multiple apps.
An app can be in multiple projects. An app is a Web application that does something

Now that your environment – a “project” – is set up, you’re set to start doing work.






